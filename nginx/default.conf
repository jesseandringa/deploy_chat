# nginx.conf
upstream api {
    server api:5003;
}

upstream client {
    server react-webapp:3000;
}
server {
    listen 443;
    server_name munihelp.com www.munihelp.com;

    root /usr/share/nginx/html;
    index index.html;

    location /api/ {
        # access_log /var/log/nginx/custom_access_api.log custom_format;
        proxy_pass http://api/;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_buffering off;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location / {
        try_files $uri $uri/ /index.html;
    }
}

# Nginx Configuration for HTTP
server {
    listen 80;
    server_name munihelp.com www.munihelp.com;

    location /api/ {
        # access_log /var/log/nginx/custom_access_api.log custom_format;
        proxy_pass http://api/;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_buffering off;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location / {
        try_files $uri $uri/ /index.html;
    }
}


# # nginx.conf
# upstream api {
#     server api:5003;
# }

# upstream client {
#     server react-webapp:3000;
# }
# log_format custom_format '$remote_addr - $remote_user [$time_local] "$request_method $request_uri?$query_string" '
#                           '$status $body_bytes_sent "$http_referer" "$http_user_agent" "$request" "$uri"';
# rewrite_log on;

# # server {
# #     listen 443;
# #     server_name munihelp.com www.munihelp.com; 
# #     root /usr/share/nginx/html;

# #     location /api/ {
# #         access_log /var/log/nginx/custom_access_api.log custom_format;
# #         proxy_pass http://api/;
# #         proxy_http_version 1.1;
# #         proxy_redirect off;
# #         proxy_buffering off;

# #         # Support upgrading to a websocket connection
# #         proxy_set_header Upgrade $http_upgrade;
# #         proxy_set_header Connection "Upgrade";

# #         # Set the host to the nginx host not the back-end host?
# #         proxy_set_header Host $host;
# #         proxy_set_header X-Real-IP $remote_addr;
# #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# #     }
    

# #     location / {
# #         # index index.html;
# #         access_log /var/log/nginx/custom_access.log custom_format;
# #         proxy_pass http://client/;
# #         # proxy_access_log /var/log/nginx/proxy_access.log;
# #         proxy_http_version 1.1;
# #         proxy_set_header Upgrade $http_upgrade;
# #         proxy_set_header Connection 'upgrade';
# #         proxy_set_header Host $host;
# #         proxy_cache_bypass $http_upgrade;
# #         # try_files $uri $uri/ /index.html;
# #     }
   
# # }

# server {
#     listen 80;
#     server_name localhost; 
#     root /usr/share/nginx/html;

#     location /api/ {
#         access_log /var/log/nginx/custom_access_api.log custom_format;
#         proxy_pass http://api/;
#         proxy_http_version 1.1;
#         proxy_redirect off;
#         proxy_buffering off;

#         # Support upgrading to a websocket connection
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "Upgrade";

#         # Set the host to the nginx host not the back-end host?
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     }
    

#     # location / {
        
#     #     access_log /var/log/nginx/custom_access.log custom_format;
#     #     proxy_pass http://client/;
        
#     #     proxy_http_version 1.1;
#     #     proxy_set_header Upgrade $http_upgrade;
#     #     proxy_set_header Connection 'upgrade';
#     #     proxy_set_header Host $host;
#     #     proxy_cache_bypass $http_upgrade;
       
#     # }
#     location / {
#         try_files $uri $uri/ /index.html;
#     }
# }